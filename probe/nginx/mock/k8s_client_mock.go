// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AirHelp/autoscaler/probe/nginx (interfaces: K8SClient)

// Package nginxMock is a generated GoMock package.
package nginxMock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/core/v1"
)

// MockK8SClient is a mock of K8SClient interface.
type MockK8SClient struct {
	ctrl     *gomock.Controller
	recorder *MockK8SClientMockRecorder
}

// MockK8SClientMockRecorder is the mock recorder for MockK8SClient.
type MockK8SClientMockRecorder struct {
	mock *MockK8SClient
}

// NewMockK8SClient creates a new mock instance.
func NewMockK8SClient(ctrl *gomock.Controller) *MockK8SClient {
	mock := &MockK8SClient{ctrl: ctrl}
	mock.recorder = &MockK8SClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8SClient) EXPECT() *MockK8SClientMockRecorder {
	return m.recorder
}

// GetPodsFromDeployment mocks base method.
func (m *MockK8SClient) GetPodsFromDeployment(arg0 context.Context, arg1 *v1.Deployment, arg2 map[string]string) (*v10.PodList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPodsFromDeployment", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v10.PodList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPodsFromDeployment indicates an expected call of GetPodsFromDeployment.
func (mr *MockK8SClientMockRecorder) GetPodsFromDeployment(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPodsFromDeployment", reflect.TypeOf((*MockK8SClient)(nil).GetPodsFromDeployment), arg0, arg1, arg2)
}
